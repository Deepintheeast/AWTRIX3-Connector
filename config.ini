[awtrix3]
# Url AWTRIX3 (Ulanzi-Clock)
url = http://192.168.200.235

[settings]
# Einstellungen für den Connector
debug = 1 
# 0 = keine Debug-Ausgaben, 1 = Debug-Ausgaben

start_time = 06:00
# Startzeit für Anzeige auf dem AWTRIX3 wenn "start_astro = 0"

stop_time = 21:00
# Stopzeit für Anzeige auf dem AWTRIX3 wenn "start_astro = 0"

pause_zwischen_apps = 10
# Pause zwischen dem Senden der Apps in Sekunden
# Bei 5 Apps und "pause_zwischen_apps = 10" dauert ein Durchgang ca. 50-60 Sekunden
# das genügt bei einer Bereitstellung neuer Daten aller 1 Minute!

show_time = 1
# 0 = Uhrzeit 1x im Loop anzeigen (time-app1-app2-app3-...-time-app1-app2-app3-...), 
# 1 = Uhrzeit im Wechsel mit App's anzeigen (time-app1-time-app2-time-app3-...)
# wird erst nach dem ersten Durchgang des Loops aktiv !

night_show = 1
# Anzeige eingebauter App zwischen Stop- und Startzeit  
# 1 = App anzeigen, 0 = Awtrix3 ausgeschaltet

night_show_app = Time
# welche App soll in der "night_show" angezeigt werden:
# Time, Date, Temp, Hum, Bat, eigentlich macht da ja nur "Time" Sinn
# ausgewählte App muss auf der "AWTRIX3"(Ulanzi) aktiviert sein!

start_daymode = 06:00
# Beginn Day-Modus für Helligkeitseinstellung
helligkeit_daymode = A
# Helligkeit im Day-Modus, 0-255 oder A für Automatik

start_nightmode = 20:00
# Beginn Night-Modus für Helligkeitseinstellung
helligkeit_nightmode = 2
# Helligkeit im Night-Modus, 0-255 oder A für Automatik

app_show_time = 3
# Länge der Anzeige "statischer" Apps im Loop in Sekunden

app_scroll_duration = 2
# Anzahl der Wiederholungen "scrollender" Apps im Loop

app_lifetime = 90
# Zeit in Sekunden nach der, wenn keine Aktualisierung erfolgt, die "App" aus dem Loop gelöscht wird

text_scrollspeed = 100
# Text Scroll Geschwindigkeit in %  < 100 - langsamer, > 100 - schneller

trans_effect = 0
# Übergangseffekt  0 - Zufall, 1 - Slide, 2 - Dim, 3 - Zoom, 4 - Rotate
# 5 - Pixelate, 6 - Curtain, 7 - Ripple, 8 - Blink, 9 - Reload, 10 - Fade

trans_effect_time = 200
# Zeit in mS für Übergangseffekt

[astro]
# Einstellungen für Sonnen-Auf/Untergang (Astrodaten)

show_sa_su = 0
# "1" Meldung im Moment des Sonnen-Auf/Untergang auf dem AWTRIX3
# "0" keine Meldung

start_astro = 1
# "1" Start Stop nach Astro Zeit Sonnen-aufgang/untergang
# "0" Start Stop nach im Bereich [awtrix3] eingegebener "start_zeit" und "stop_zeit"

# Wenn "start_astro = 1" dann:

sa_korrektur = -30
# Korrekturzeit in Minuten (Bsp. "-30" => 30 Min vor Sonnenaufgang, "15" => 15 Min. nach Sonnenaufgang

su_korrektur = 120
# Korrekturzeit in Minuten (Bsp. "-10" => 10 Min vor Sonnenuntergang, "120" => 120 Min. nach Sonnenuntergang

standort_breite = 52.49079913352788
standort_laenge = 13.395730738410471
# Geo Daten Standort zur Berechnung Sonnen-aufgang/untergang (hier Berlin)
# Google-Maps -> Rechtsklick "Eurer Ortsname" -> oberste Zeile

[wetter]
# Einstellungen für Wetterdaten
overlay = 1
# Wetter Overlays "clear","snow","rain","drizzle","storm","thunder","frost" über den Bildschirm legen
# 1 = ja, 0 = nein

overlay_global = 1
# (wenn [wetter] overlay = 1 dann) 
# 0 = Overlay nur in Wetter App, 1 = Overlay "global" in allen Apps

[crypto]
# API-Key für CryptoCompareApi
# zur Nutzung der CryptoCompareApi ist eine Anmeldung (https://www.cryptocompare.com) nötig.
# Der kleinste "kostenlose" Plan beinhaltet 100000 Abrufe pro Monat und sollte für uns genügen.
# Euern "API-Key" findet Ihr unter euern Benutzerkonto, diesen hier (in der Sektion [crypto])
# eintragen.

api_key = '000000000000000000000000000000000000000000000000000000000000'

#
# Ab hier erfolgt die Konfiguration der Apps
#

[apps]
# hier werden die anzuzeigenden Apps definiert
# Format: appname = app-xxx
# appname = Name der App
# app-xxx = Name der Sektion zur Definition der zu holenden Daten
# Reihenfolge der Apps entspricht der Reihenfolge der Anzeige
# nicht anzuzeigende Apps können mit "#" auskommentiert werden

dummy=app-dummy
#pv = app-pv
#pv2 = app-pv2
#auto = app-automation
#wetter = app-wetter
#wground = app-wground
#soc = app-soc
#auto1R1K = app-auto1R1K
#crypto = app-crypto
#indikator = app-indi
#raspi = app-raspi



####
#[app-xxx] Definition der zu holenden Daten
#Format: 
#wert1 = Datenquelle,IP/Path,Database,Measurment(Table),Wert(Column),User,Passwort
# User, Passwort bei "Bedarf" (influxdb,mariadb,postgresql,tasmota) sonst weglassen
# aktuell verfügbare Datenquellen = influxdb,sqlite,mariadb,postgresql,crypto,tasmota
####

[app-dummy]
# für Dummy werden keine Daten benötigt!

[app-pv]
# Werte für Anzeige PV
wert1=influxdb,127.0.0.1:8086,solaranzeige,PV,Leistung
wert2=influxdb,127.0.0.1:8086,solaranzeige,Summen,Wh_GesamtHeute
wert3=influxdb,127.0.0.1:8086,solaranzeige,Batterie,SOC

# Bsp. für 2WR (Datenbanken WR-1 und WR-2)
#wert1=influxdb,127.0.0.1:8086,WR-1,PV,Leistung
#wert2=influxdb,127.0.0.1:8086,WR-2,PV,Leistung
#wert3=influxdb,127.0.0.1:8086,WR-1,Summen,Wh_GesamtHeute
#wert4=influxdb,127.0.0.1:8086,WR-2,Summen,Wh_GesamtHeute
#wert5=influxdb,127.0.0.1:8086,WR-1,Batterie,SOC

# Bsp. für InfluxDB2 mit Token
#wertx=influxdb2,<ip:port>,<bucket>,<measurement>,<field>,<organization>,<token>
#wert1=influxdb2,127.0.0.1:8086,solaranzeige,PV,Leistung,my-org,xxxx

[app-pv2]
# Werte für Anzeige PV
wert1=influxdb,192.168.200.53:8086,solaranzeige,PV,Leistung
wert2=influxdb,192.168.200.53:8086,solaranzeige,Batterie,SOC
wert3=influxdb,192.168.200.53:8086,solaranzeige,Summen,Wh_GesamtHeute

[app-wetter]
# Werte für Anzeige Wetter
wert1=influxdb,127.0.0.1:8086,solaranzeige,aktuellesWetter,Temperatur
wert2=influxdb,127.0.0.1:8086,solaranzeige,aktuellesWetter,Himmel
wert3=influxdb,127.0.0.1:8086,solaranzeige,aktuellesWetter,Luftdruck

[app-wground]
# Werte für Anzeige Wetter-Wunderground
wert1=influxdb,192.168.200.53:8086,wunderweather,weather,Temperatur
wert2=influxdb,192.168.200.53:8086,wunderweather,weather,Luftdruck
#wert3=influxdb,192.168.200.53:8086,wunderweather,weather,Luftfeuchtigkeit
wert4=influxdb,192.168.200.53:8086,wunderweather,weather,Niederschlag mm/h
wert5=influxdb,192.168.200.53:8086,wunderweather,weather,Niederschlag 24h
#wert6=influxdb,192.168.200.53:8086,wunderweather,weather,Windgeschwindigkeit
#wert7=influxdb,192.168.200.53:8086,wunderweather,weather,Windrichtung

[app-soc]
# Werte für Anzeige SOC
wert1=influxdb,127.0.0.1:8086,solaranzeige,Batterie,SOC

[app-raspi]
# Werte für Anzeige Raspi
wert1=influxdb,127.0.0.1:8086,solaranzeige,Service,RaspiTemp
wert2=influxdb,127.0.0.1:8086,solaranzeige,Service,RaspiFreierSpeicher

[app-auto1R1K]
# Werte für Automation für 1 Relais 1 Kontakt mit
# aktuellen dazugehörigen "Tasmota Daten" Momentanleistung und Summe Tagesverbrauch
wert1=sqlite,/var/www/html/database/automation.sqlite3,config,Relais1aktiv
wert2=sqlite,/var/www/html/database/automation.sqlite3,config,Relais1Name
wert3=sqlite,/var/www/html/database/automation.sqlite3,config,Relais1Kontakt1
wert4=tasmota,192.168.200.51,ENERGY,Power
wert5=tasmota,192.168.200.51,ENERGY,Today

[app-indi]
# Werte für Anzeige Indikatoren
wert1=influxdb,127.0.0.1:8086,solaranzeige,Batterie,Strom
wert2=influxdb,127.0.0.1:8086,solaranzeige,Service,IntModus
wert3=influxdb,127.0.0.1:8086,solaranzeige,Service,RaspiTemp
wert4=influxdb,127.0.0.1:8086,solaranzeige,Batterie,Entladestrom

[app-automation]
# Werte für Anzeige Automation universal für x Relais und x Kontakte
wert1=sqlite,/var/www/html/database/automation.sqlite3,config,Relais1aktiv
wert2=sqlite,/var/www/html/database/automation.sqlite3,config,Relais1Name
wert3=sqlite,/var/www/html/database/automation.sqlite3,config,Relais1AnzKontakte
wert4=sqlite,/var/www/html/database/automation.sqlite3,config,Relais1Kontakt1
wert5=sqlite,/var/www/html/database/automation.sqlite3,config,Relais1Kontakt2
wert6=sqlite,/var/www/html/database/automation.sqlite3,config,Relais1Kontakt3
wert7=sqlite,/var/www/html/database/automation.sqlite3,config,Relais1Kontakt4
wert8=sqlite,/var/www/html/database/automation.sqlite3,config,Relais2Name
wert9=sqlite,/var/www/html/database/automation.sqlite3,config,Relais2aktiv
wert10=sqlite,/var/www/html/database/automation.sqlite3,config,Relais2AnzKontakte
wert11=sqlite,/var/www/html/database/automation.sqlite3,config,Relais2Kontakt1
wert12=sqlite,/var/www/html/database/automation.sqlite3,config,Relais2Kontakt2
wert13=sqlite,/var/www/html/database/automation.sqlite3,config,Relais2Kontakt3
wert14=sqlite,/var/www/html/database/automation.sqlite3,config,Relais2Kontakt4

[app-crypto]
# Werte für Anzeige Crypto Währungen
# Format: "wert1 = Datenquelle,"ID1,ID2,ID3, etc."
# ID1,ID2,ID3, etc. = ID der Crypto-Währung Bsp. "BTC - Bitcoin, ETH - Ethereum, SOL - Solana"
wert1=crypto,"BTC,ETH,SOL"

